name: Deploy to VPS

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: 'npm'

      - name: Install dependencies and generate lockfile
        run: |
          npm install
          git add package-lock.json
          git commit -m "Update package-lock.json" || echo "No changes to package-lock.json"
          git push origin main || echo "Nothing to push"

      - name: Build project
        run: |
          cat <<EOF > .env.local
          MERCADO_PAGO_ACCESS_TOKEN=${{ secrets.MERCADO_PAGO_ACCESS_TOKEN }}
          MERCADO_PAGO_PUBLIC_KEY=${{ secrets.MERCADO_PAGO_PUBLIC_KEY }}
          NEXT_PUBLIC_MERCADO_PAGO_PUBLIC_KEY=${{ secrets.NEXT_PUBLIC_MERCADO_PAGO_PUBLIC_KEY }}
          NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          API_BASE_URL=${{ secrets.API_BASE_URL }}
          NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
          API_TENANT_BASE_URL_V1=${{ secrets.API_TENANT_BASE_URL_V1 }}
          API_KEY=${{ secrets.API_KEY }}
          EOF
          npm run build

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Cargar Node.js si se usa nvm
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" || echo "nvm not found"
            
            cd /home/toysnow/htdocs/www.toysnow.com.co
            
            # Actualizar código
            git fetch origin
            git reset --hard origin/main
            
            # Instalar dependencias
            if [ -f "package-lock.json" ]; then
              npm ci --omit=dev
            else
              npm install --omit=dev
            fi
            
            # Reiniciar aplicación
            pm2 delete next-app || echo "No existing next-app process"
            pm2 delete next-toysnow || echo "No existing next-toysnow process"
            pm2 start npm --name "next-app" -- start
            pm2 save